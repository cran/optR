% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optR.R
\name{optR.default}
\alias{optR.default}
\title{Optimization & predictive modelling Toolsets}
\usage{
\method{optR}{default}(x, y = NULL, weights = NULL, method = c("gauss",
  "LU", "gaussseidel", "cgm", "choleski"), iter = 500, tol = 1e-07,
  keep.data = TRUE, ...)
}
\arguments{
\item{x}{: Input data frame}

\item{y}{: Response is data frame}

\item{weights}{: Observation weights}

\item{method}{: "gauss" for gaussian elimination and "LU" for LU factorization}

\item{iter}{: Number of Iterations}

\item{tol}{: Convergence tolerance}

\item{keep.data}{: Returns Input dataset in object}

\item{...}{: S3 Class}
}
\value{
U    : Decomposed matrix for Gauss-ELimination Ax=b is converted into Ux=c where U is upper triangular matrix for LU decomposition U contain the values for L & U decomposition LUx=b

c    : transformed b & for LU transformation c is y from equation Ux=y

estimates  : Return x values for linear system

seq        : sequence of A matrix re-ordered
}
\description{
soptR is the default function for optimization
}
\examples{
# Solving equation Ax=b
A<-matrix(c(6,-4,1, -4,6,-4,1,-4,6), nrow=3,ncol=3, byrow = TRUE)
b<-matrix(c(-14,36, 6), nrow=3,ncol=1,byrow=TRUE)
Z<-optR(A, b, method="gauss") 

# Solve Linear model using LU decomposition (Supports Multi-response)
Z<-optR(A, b, method="LU")

# Solving the function using numerical method
Z<-optR(A, b, method="cgm")

require(utils)
set.seed(129)
n <- 7 ; p <- 2
X <- matrix(rnorm(n * p), n, p) # no intercept!
y <- rnorm(n)
Z<-optR(X, y, method="LU")
}

